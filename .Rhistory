geom_point()+
xlim(0,quantile(pf$www_likes_received,0.95))+
ylim(0,quantile(pf$likes_received,0.95))+
geom_smooth(method = 'lm',color='red')
with(pf, cor.test(www_likes_received, y=likes_received), method='pearson')
library(alr3)
data(Mitchell)
ggplot(aes(x=Month,y=Temp), data=Mitchell)+
geom_line()+scale_x_continuous(breaks =seq(0,203,12))
with(Mitchell,cor.test(Month,Temp))
ggplot(aes(x=age,y=friend_count_mean). data=pf.fc_by_age)+geom_line()
ggplot(aes(x=age,y=friend_count_mean), data=pf.fc_by_age)+geom_line()
pf$age_with_months <-pf$age+(1-pf$dob_month/12)
age_with_months
head(pf.fc_by_age)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
library(ggplot2)
library(ggthemes)
pf<-read.csv('pseudo_facebook.tsv', sep='\t')
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(color='red', alpha=1/20,position = position_jitter(h=0))
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(alpha=1/20,color='red')+xlim(13,90)+
coord_trans(y='sqrt')+
theme_solarized(light = FALSE)+
scale_color_solarized('red')
ggplot(aes(x=age,y=friendships_initiated),data=pf)+
geom_point(alpha=1/10, position = position_jitter(h=0))+
coord_trans(y='sqrt')
library(dplyr)
age_group<-group_by(pf,age)
pf.fc_by_age<-summarise(age_group,friend_count_mean=mean(friend_count),friend_count_median=median(friend_count),n=n())
pf.fc_by_age<-arrange(pf.fc_by_age,age)
head(pf.fc_by_age)
ggplot(aes(x=age,y=friend_count_mean), data=pf.fc_by_age)+
geom_line()
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(alpha=1/20,color='orange')+xlim(13,90)+
coord_trans(y='sqrt')+
coord_trans(y='sqrt')+
geom_line(stat='summary', fun.y=mean)+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.1),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.9),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.5),
linetype=2 ,color='blue')
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(alpha=1/20,color='orange')+
coord_cartesian(xlim=c(13,70),ylim=c(0,1000))+
geom_line(stat='summary', fun.y=mean)+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.1),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.9),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.5),
linetype=2 ,color='blue')
cor.test(pf$age,pf$friend_count,method = 'pearson')
with(subset(pf,age<=70),cor.test(age,friend_count, method = 'pearson'))
with(subset(pf,age<=70),cor.test(age,friend_count, method = 'spearman'))
with(pf, cor.test(www_likes_received,likes_received,  method = 'pearson'))
ggplot(aes(x=www_likes_received,y=likes_received),data=pf)+
geom_point()+
xlim(0,quantile(pf$www_likes_received,0.95))+
ylim(0,quantile(pf$likes_received,0.95))+
geom_smooth(method = 'lm',color='red')
with(pf, cor.test(www_likes_received, y=likes_received), method='pearson')
library(alr3)
data(Mitchell)
ggplot(aes(x=Month,y=Temp), data=Mitchell)+
geom_line()+scale_x_continuous(breaks =seq(0,203,12))
with(Mitchell,cor.test(Month,Temp))
ggplot(aes(x=age,y=friend_count_mean), data=pf.fc_by_age)+geom_line()
pf$age_with_months <-pf$age+(1-pf$dob_month/12)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
ggplot(aes(x=age_with_months,y=friend_count_mean), data=subset(pf.fc_by_age,age_with_months<71))+
geom_line()
pf$age_with_months <-pf$age+(1-pf$dob_month/12)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
ggplot(aes(x=age_with_months,y=friend_count_mean), data=subset(pf.fc_by_age,age_with_months<71))+
geom_line()
library(girdExtra)
library(gridExtra)
grid.arrange(p1,p2)
library(ggplot2)
library(ggthemes)
library(ggplot2)
library(dplyr)
library(ggthemes)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggthemes)
head(diamonds)
diamonds<-diamonds
ggplot(aes(x=price,y=x), data=diamonds)+
geom_point()
cor.test(diamonds$price,diamonds$x,method = 'pearson')
cor.test(diamonds$price,diamonds$y,method = 'pearson')
cor.test(diamonds$price,diamonds$z,method = 'pearson')
ggplot(aes(x=price,y=depth), data=diamonds)+
geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(50,70,2)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(c(50,70)2)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(c(50,70))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(c(50,70),limits = 2)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(limits = c(50,70,2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(limits = c(50,70))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(breaks =seq(50,70,2))
cor.test(diamonds$price,diamonds$depth,method = 'pearson')
ggplot(aes(x=price,y=carat),data=diamonds)+
geom_point()+
xlim(0,quantile(diamonds$price,0.99))
ggplot(aes(x = carat, y = price),
data = subset(diamonds, diamonds$price < quantile(diamonds$price, 0.99) &
diamonds$carat < quantile(diamonds$carat, 0.99))) +
geom_point()
ggplot(aes(x=price,y=(x*y*x)),data=diamonds)+geom_point()
diamonds$volume<-diamonds$x*diamonds$y*diamonds$z
diamonds$volume<-diamonds$x*diamonds$y*diamonds$z
ggplot(aes(x=price,y=volume),data=diamonds)+geom_point()
cor.test(diamonds$price,diamonds$volume,method = 'pearson')
pf_800 <-subset(pf, !(volume == 0 | volume >= 800))
cor.test(diamonds$price,pf_800,method = 'pearson')
pf_800 <-subset(pf, !(volume == 0 | volume >= 800))
cor.test(diamonds$price,pf_800,method = 'pearson')
pf_800 <-subset(diamonds), !(volume == 0 | volume >= 800))
cor.test(diamonds$price,pf_800,method = 'pearson')
pf_800 <-subset(diamonds, !(volume == 0 | volume >= 800))
cor.test(diamonds$price,pf_800,method = 'pearson')
cor.test(pf_800$price,pf_800$volume,method = 'pearson')
pf_800 <-subset(diamonds, !(volume == 0 | volume >= 800))
ggplot(aes(x=price, y=volume), data=pf_800)+
geom_point()+
geom_smooth()
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
library(dplyr)
diamondsByClarity <-
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(as.numeric(price)),
median_price = median(as.numeric(price)),
min_price = min(as.numeric(price)),
max_price = max(as.numeric(price)),
n = n()) %>%
arrange(clarity)
View(diamondsByClarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
library(gridExtra)
grid.arrange(diamonds_by_clarity,diamonds_mp_by_color)
a
a
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
p1<-ggplot(diamonds_mp_by_clarity, aes(y=diamonds_by_clarity, x=mean_price ) )+ geom_line() +scale_x_continuous()
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2<-ggplot(diamonds_mp_by_color, aes(y=diamonds_by_color, x=mean_price ) )+ geom_bar()+scale_x_continuous()
library(gridExtra)
grid.arrange(p1,p2,ncol=1)
library(ggplot2)
library(ggthemes)
pf<-read.csv('pseudo_facebook.tsv', sep='\t')
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(color='red', alpha=1/20,position = position_jitter(h=0))
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(alpha=1/20,color='red')+xlim(13,90)+
coord_trans(y='sqrt')+
theme_solarized(light = FALSE)+
scale_color_solarized('red')
ggplot(aes(x=age,y=friendships_initiated),data=pf)+
geom_point(alpha=1/10, position = position_jitter(h=0))+
coord_trans(y='sqrt')
library(dplyr)
age_group<-group_by(pf,age)
pf.fc_by_age<-summarise(age_group,friend_count_mean=mean(friend_count),friend_count_median=median(friend_count),n=n())
pf.fc_by_age<-arrange(pf.fc_by_age,age)
head(pf.fc_by_age)
ggplot(aes(x=age,y=friend_count_mean), data=pf.fc_by_age)+
geom_line()
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(alpha=1/20,color='orange')+xlim(13,90)+
coord_trans(y='sqrt')+
coord_trans(y='sqrt')+
geom_line(stat='summary', fun.y=mean)+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.1),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.9),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.5),
linetype=2 ,color='blue')
ggplot(aes(x=age, y=friend_count),data=pf)+
geom_point(alpha=1/20,color='orange')+
coord_cartesian(xlim=c(13,70),ylim=c(0,1000))+
geom_line(stat='summary', fun.y=mean)+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.1),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.9),
linetype=2 ,color='blue')+
geom_line(stat='summary',
fun.y=quantile , fun.args=list(probs=0.5),
linetype=2 ,color='blue')
cor.test(pf$age,pf$friend_count,method = 'pearson')
with(subset(pf,age<=70),cor.test(age,friend_count, method = 'spearman'))
with(subset(pf,age<=70),cor.test(age,friend_count, method = 'pearson'))
with(pf, cor.test(www_likes_received,likes_received,  method = 'pearson'))
ggplot(aes(x=www_likes_received,y=likes_received),data=pf)+
geom_point()+
xlim(0,quantile(pf$www_likes_received,0.95))+
ylim(0,quantile(pf$likes_received,0.95))+
geom_smooth(method = 'lm',color='red')
with(pf, cor.test(www_likes_received, y=likes_received), method='pearson')
library(alr3)
data(Mitchell)
ggplot(aes(x=Month,y=Temp), data=Mitchell)+
geom_line()+scale_x_continuous(breaks =seq(0,203,12))
with(Mitchell,cor.test(Month,Temp))
ggplot(aes(x=age,y=friend_count_mean), data=pf.fc_by_age)+geom_line()
pf$age_with_months <-pf$age+(1-pf$dob_month/12)
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- arrange(pf.fc_by_age, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
ggplot(aes(x=age_with_months,y=friend_count_mean), data=subset(pf.fc_by_age,age_with_months<71))+
geom_line()
library(gridExtra)
grid.arrange(p1,p2)
library(ggplot2)
library(dplyr)
library(ggthemes)
diamonds<-diamonds
ggplot(aes(x=price,y=x), data=diamonds)+
geom_point()
cor.test(diamonds$price,diamonds$x,method = 'pearson')
cor.test(diamonds$price,diamonds$y,method = 'pearson')
cor.test(diamonds$price,diamonds$z,method = 'pearson')
ggplot(aes(x=price,y=depth), data=diamonds)+
geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha=1/100)+
scale_x_continuous(breaks =seq(50,70,2))
cor.test(diamonds$price,diamonds$depth,method = 'pearson')
ggplot(aes(x = carat, y = price),
data = subset(diamonds, diamonds$price < quantile(diamonds$price, 0.99) &
diamonds$carat < quantile(diamonds$carat, 0.99))) +
geom_point()
diamonds$volume<-diamonds$x*diamonds$y*diamonds$z
ggplot(aes(x=price,y=volume),data=diamonds)+geom_point()
pf_800 <-subset(diamonds, !(volume == 0 | volume >= 800))
cor.test(pf_800$price,pf_800$volume,method = 'pearson')
ggplot(aes(x=price, y=volume), data=pf_800)+
geom_point()+
geom_smooth()
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
library(dplyr)
diamondsByClarity <-
diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(as.numeric(price)),
median_price = median(as.numeric(price)),
min_price = min(as.numeric(price)),
max_price = max(as.numeric(price)),
n = n()) %>%
arrange(clarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
p1<-ggplot(diamonds_mp_by_clarity, aes(y=diamonds_by_clarity, x=mean_price ) )+ geom_line() +scale_x_continuous()
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2<-ggplot(diamonds_mp_by_color, aes(y=diamonds_by_color, x=mean_price ) )+ geom_bar()+scale_x_continuous()
library(gridExtra)
grid.arrange(p1,p2,ncol=1)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
p1<-ggplot(data=diamonds_mp_by_clarity, aes(y=diamonds_by_clarity, x=mean_price ) )+ geom_line() +scale_x_continuous()
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2<-ggplot(data=diamonds_mp_by_color, aes(y=diamonds_by_color, x=mean_price ) )+ geom_bar()+scale_x_continuous()
library(gridExtra)
grid.arrange(p1,p2,ncol=1)
p2<-ggplot(data=diamonds_mp_by_color, aes(y=diamonds_by_color, x=mean_price ) )+ geom_bar()
p1<-ggplot(data=diamonds_mp_by_clarity, aes(y=diamonds_by_clarity, x=mean_price ) )+ geom_line()
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2<-ggplot(data=diamonds_mp_by_color, aes(y=diamonds_by_color, x=mean_price ) )+ geom_bar()
library(gridExtra)
grid.arrange(p1,p2,ncol=1)
grid.arrange(p1,p2,ncol=1)
p1 <- ggplot(aes(clarity, mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat = 'identity')
p2 <- ggplot(aes(color, mean_price), data = diamonds_mp_by_color) +
geom_bar(stat = 'identity')
grid.arrange(p1, p2)
data(indicator total suicides 20100913)
data("indicator total suicides 20100913.xls")
getwd()
data("indicator total suicides 20100913.xls")
getwd()
data("indicator total suicides 20100913.xls")
data("indicator_total_suicides_20100913")
data(indicator_total_suicides_20100913)
data<- read.xlsx(indicator_total_suicides_20100913)
library(XLConnect)
install.packages("readxl")
library(readxl)
data<- read.xlsx(indicator_total_suicides_20100913)
data<- read_excel(indicator_total_suicides_20100913)
getwd()
install.packages("readxl")
install.packages("readxl")
library(readxl)
data<- read_excel(indicator_total_suicides_20100913)
data<- read_excel(C:\Users\aemra\Documents\GitHub\Explore-and-Summarize-Data-with-R,indicator_total_suicides_20100913)
data<- read_excel(C:\Users\aemra\Documents\GitHub\Explore-and-Summarize-Data-with-R\indicator_total_suicides_20100913)
data<- read_excel("C:\Users\aemra\Documents\GitHub\Explore-and-Summarize-Data-with-R\indicator_total_suicides_20100913")
data<- read_excel("C:/Users\aemra/Documents/GitHub/Explore-and-Summarize-Data-with-R/indicator_total_suicides_20100913")
data<- read_excel("C:/Users\aemra/Documents/GitHub/Explore-and-Summarize-Data-with-R/indicator_total_suicides_20100913.xlsx")
install.packages("xlsx")
library(xlsx)
data<- read.xlsx("indicator_total_suicides_20100913.xlsx")
data<- read.xlsx("indicator_total_suicides_20100913.xlsx",1)
head(data)
View(data)
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_bar()
ggplot(aes(x=Suicides..total.deaths,y=x2002),data=data)+geom_bar()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_bar()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_area()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_bar()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_histogram()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_line()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_line()+scale_y_continuous(breaks =seq(0,100000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()+scale_y_continuous(breaks =seq(0,100000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()+scale_y_continuous(breaks = seq(0,10000,1000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()+ylim(c(0,10000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()+ylim(c(0,100000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()+ylim(c(0,10000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point()+ylim(c(0,1000))
ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point(color='red')+ylim(c(0,1000))
p2<-ggplot(aes(x=Suicides..total.deaths,y=X2004),data=data)+geom_point()+ylim(c(0,1000))
grid.arrange(p1,p2)
p1<-ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point(color='red')+ylim(c(0,1000))
p2<-ggplot(aes(x=Suicides..total.deaths,y=X2004),data=data)+geom_point()+ylim(c(0,1000))
grid.arrange(p1,p2)
p1<-ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point(color='red')+ylim(c(0,1000))+geom_smooth()
p2<-ggplot(aes(x=Suicides..total.deaths,y=X2004),data=data)+geom_point()+ylim(c(0,1000))
grid.arrange(p1,p2)
p1<-ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point(color='red')+ylim(c(0,1000))+geom_smooth(method = 'lm',color='red')
p2<-ggplot(aes(x=Suicides..total.deaths,y=X2004),data=data)+geom_point()+ylim(c(0,1000))
grid.arrange(p1,p2)
p1<-ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point(color='red')+geom_smooth(method = 'lm',color='red')
p2<-ggplot(aes(x=Suicides..total.deaths,y=X2004),data=data)+geom_point()+ylim(c(0,1000))
grid.arrange(p1,p2)
p1<-ggplot(aes(x=Suicides..total.deaths,y=X2002),data=data)+geom_point(color='red')+ylim(c(0,1000))+geom_smooth(method = 'lm',color='red')
p2<-ggplot(aes(x=Suicides..total.deaths,y=X2004),data=data)+geom_point()+ylim(c(0,1000))
grid.arrange(p1,p2)
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))+ylim(c(0,1000))
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_bar(aes(y=X2002),color='red')+
geom_bar(aes(y=X2004))+ylim(c(0,1000))
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))+ylim(c(0,1000))
library(ggthemes)
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))+ylim(c(0,1000))+  theme_solarized(light = FALSE)+
scale_color_solarized('red')
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))+ylim(c(0,1000))+ xlim(c(0,10))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))+ylim(c(0,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
View(data)
ggplot(aes(x=X2002,y=X2004),data=data)+geom_line()
+xlim(c(0,10000))
+xlim(c(0,10000))
ggplot(aes(x=X2002,y=X2004),data=data)+geom_line() +xlim(c(0,10000))
ggplot(aes(x=X2002,y=X2004),data=data)+geom_line() +xlim(c(0,100000))
ggplot(aes(x=X2002,y=X2004),data=data)+geom_line() +xlim(c(0,1000000))
ggplot(aes(x=X2002,y=X2004),data=data)+geom_line() +xlim(c(0,100000))
data$fark<-(data$X2004-data$X2002)
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_line()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_point()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_bar()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_count()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_path()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_pointrange()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_point()
ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_point()+ylim(c(-1000,1000))
p5<-ggplot(aes(x=Suicides..total.deaths),data=data)+
geom_point(aes(y=X2002),color='red')+
geom_point(aes(y=X2004))+ylim(c(0,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
data$fark<-(data$X2004-data$X2002)
p3<-ggplot(aes(x=Suicides..total.deaths,y=fark),data=data)+geom_point()+ylim(c(-1000,1000))
grid.arrange(p3,p5)
p3<-ggplot(aes(x=fark,y=Suicides..total.deaths),data=data)+geom_point()+ylim(c(-1000,1000))
grid.arrange(p3,p5)
ggplot(aes(x=fark,y=Suicides..total.deaths),data=data)+geom_point()+xlim(c(-1000,1000))
ggplot(aes(x=fark,y=Suicides..total.deaths),data=data)+geom_point()+xlim(c(-1000,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
ggplot(aes(x=fark,y=Suicides..total.deaths),data=data)+geom_point(color='red')+xlim(c(-1000,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
p3<-ggplot(aes(x=fark,y=Suicides..total.deaths),data=data)+geom_point(color='red')+xlim(c(-1000,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
grid.arrange(p3,p5)
p5<-ggplot(aes(y=Suicides..total.deaths),data=data)+
geom_point(aes(x=X2002),color='red')+
geom_point(aes(x=X2004))+xlim(c(0,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
data$fark<-(data$X2004-data$X2002)
p3<-ggplot(aes(x=fark,y=Suicides..total.deaths),data=data)+geom_point(color='red')+xlim(c(-1000,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
grid.arrange(p3,p5)
grid.arrange(p3,p5,col(2))
grid.arrange(p3,p5,ncol=2)
data$differences<-(data$X2004-data$X2002)
p3<-ggplot(aes(x=differences,y=Suicides..total.deaths),data=data)+geom_point(color='red')+xlim(c(-1000,1000))+ theme_solarized(light = FALSE)+
scale_color_solarized('red')
grid.arrange(p3,p5,ncol=2)
